/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.uefs.ecomp.bazar.Interface;

import br.uefs.ecomp.bazar.facade.BazarFacade;
import br.uefs.ecomp.bazar.model.*;
import br.uefs.ecomp.bazar.model.exception.UsuarioJaParticipaException;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Davi
 */
public class MainJframe extends javax.swing.JFrame {
    
    private BazarFacade facade;
    /**
     * Creates new form MainJframe
     */
    public MainJframe()
    {
        this.facade = new BazarFacade();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        midPanel = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtosList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        leiloesList = new javax.swing.JList<>();
        midBtnPanel = new javax.swing.JPanel();
        btnParticiparLeilao = new javax.swing.JButton();
        btnIniciarLeilao = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        infoSubPanel1 = new javax.swing.JPanel();
        info1Plbl1 = new javax.swing.JLabel();
        info2Plbl1 = new javax.swing.JLabel();
        info3Plbl1 = new javax.swing.JLabel();
        info4Plbl1 = new javax.swing.JLabel();
        infoSubPanel2 = new javax.swing.JPanel();
        info1Llbl1 = new javax.swing.JLabel();
        info2Llbl1 = new javax.swing.JLabel();
        info3Llbl1 = new javax.swing.JLabel();
        info4Llbl1 = new javax.swing.JLabel();
        info5Llbl1 = new javax.swing.JLabel();
        info6Llbl1 = new javax.swing.JLabel();
        btnPanel = new javax.swing.JPanel();
        btnListarProdutos = new javax.swing.JButton();
        btnListarLeiloes = new javax.swing.JButton();
        btnListarLeiloesIniciados = new javax.swing.JButton();
        btnListarLeiloesEspecificos = new javax.swing.JButton();
        dateTimePanel = new javax.swing.JPanel();
        nullLabel1 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        nullLabel2 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        loadMenuItem = new javax.swing.JMenuItem();
        cadastroMenuItem = new javax.swing.JMenuItem();
        loginMenuItem = new javax.swing.JMenuItem();
        userMenu = new javax.swing.JMenu();
        timeMenuItem = new javax.swing.JMenuItem();
        cadastrarProdutoMenuItem = new javax.swing.JMenuItem();
        cadastrarLeilaoMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        lancesMenuItem = new javax.swing.JMenu();
        darLanceMenuItem = new javax.swing.JMenuItem();
        darLanceMinimoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(555, 300));
        setPreferredSize(new java.awt.Dimension(600, 435));
        setSize(new java.awt.Dimension(550, 335));

        mainPanel.setEnabled(false);
        mainPanel.setLayout(new java.awt.BorderLayout(1, 1));

        midPanel.setLayout(new java.awt.GridBagLayout());

        listPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        produtosList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        produtosList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        produtosList.setName("ListaProdutos"); // NOI18N
        produtosList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                produtosListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(produtosList);

        listPanel.add(jScrollPane1);

        leiloesList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        leiloesList.setName("ListaLeilões"); // NOI18N
        leiloesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                leiloesListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(leiloesList);

        listPanel.add(jScrollPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.4;
        gridBagConstraints.insets = new java.awt.Insets(21, 2, 45, 2);
        midPanel.add(listPanel, gridBagConstraints);

        btnParticiparLeilao.setText("Participar de um leilão");
        btnParticiparLeilao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParticiparLeilaoActionPerformed(evt);
            }
        });
        midBtnPanel.add(btnParticiparLeilao);

        btnIniciarLeilao.setText("Iniciar Leilão Selecionado");
        btnIniciarLeilao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarLeilaoActionPerformed(evt);
            }
        });
        midBtnPanel.add(btnIniciarLeilao);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        midPanel.add(midBtnPanel, gridBagConstraints);

        infoPanel.setLayout(new java.awt.GridLayout(1, 0));

        infoSubPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        infoSubPanel1.setPreferredSize(new java.awt.Dimension(100, 100));
        infoSubPanel1.setLayout(new java.awt.GridLayout(2, 0));

        info1Plbl1.setText("Tipo:");
        info1Plbl1.setVerifyInputWhenFocusTarget(false);
        infoSubPanel1.add(info1Plbl1);

        info2Plbl1.setText("Resumo:");
        infoSubPanel1.add(info2Plbl1);

        info3Plbl1.setText("Detalhes:");
        infoSubPanel1.add(info3Plbl1);

        info4Plbl1.setText("Status:");
        infoSubPanel1.add(info4Plbl1);

        infoPanel.add(infoSubPanel1);

        infoSubPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        infoSubPanel2.setPreferredSize(new java.awt.Dimension(100, 100));
        infoSubPanel2.setLayout(new java.awt.GridLayout(2, 0));

        info1Llbl1.setText("Produto:");
        infoSubPanel2.add(info1Llbl1);

        info2Llbl1.setText("Preço:");
        infoSubPanel2.add(info2Llbl1);

        info3Llbl1.setText("Início:");
        infoSubPanel2.add(info3Llbl1);

        info4Llbl1.setText("Vendedor:");
        infoSubPanel2.add(info4Llbl1);

        info5Llbl1.setText("Incremento:");
        infoSubPanel2.add(info5Llbl1);

        info6Llbl1.setText("Término:");
        infoSubPanel2.add(info6Llbl1);

        infoPanel.add(infoSubPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        midPanel.add(infoPanel, gridBagConstraints);

        mainPanel.add(midPanel, java.awt.BorderLayout.CENTER);

        btnPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnListarProdutos.setText("Listar Produtos");
        btnListarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarProdutosActionPerformed(evt);
            }
        });
        btnPanel.add(btnListarProdutos);

        btnListarLeiloes.setText("Listar Leilões");
        btnListarLeiloes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarLeiloesActionPerformed(evt);
            }
        });
        btnPanel.add(btnListarLeiloes);

        btnListarLeiloesIniciados.setText("Listar Leilões Iniciados");
        btnListarLeiloesIniciados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarLeiloesIniciadosActionPerformed(evt);
            }
        });
        btnPanel.add(btnListarLeiloesIniciados);

        btnListarLeiloesEspecificos.setBackground(new java.awt.Color(255, 51, 55));
        btnListarLeiloesEspecificos.setText("Listar Leilões Especificos");
        btnListarLeiloesEspecificos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarLeiloesEspecificosActionPerformed(evt);
            }
        });
        btnPanel.add(btnListarLeiloesEspecificos);

        mainPanel.add(btnPanel, java.awt.BorderLayout.PAGE_END);

        dateTimePanel.setLayout(new java.awt.GridLayout(2, 0));
        dateTimePanel.add(nullLabel1);

        lblTime.setText("Hora:");
        dateTimePanel.add(lblTime);
        dateTimePanel.add(nullLabel2);

        lblDate.setText("Data:");
        dateTimePanel.add(lblDate);

        mainPanel.add(dateTimePanel, java.awt.BorderLayout.NORTH);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        saveMenuItem.setText("Salvar");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        loadMenuItem.setText("Carregar");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadMenuItem);

        cadastroMenuItem.setText("Cadastrar");
        cadastroMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(cadastroMenuItem);

        loginMenuItem.setText("Logar");
        loginMenuItem.setToolTipText("");
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loginMenuItem);

        jMenuBar1.add(fileMenu);

        userMenu.setText("User");

        timeMenuItem.setText("Listar momento atual");
        timeMenuItem.setEnabled(false);
        timeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(timeMenuItem);

        cadastrarProdutoMenuItem.setText("Cadastrar Produto");
        cadastrarProdutoMenuItem.setEnabled(false);
        cadastrarProdutoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarProdutoMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(cadastrarProdutoMenuItem);

        cadastrarLeilaoMenuItem.setText("Cadastrar Leilão");
        cadastrarLeilaoMenuItem.setEnabled(false);
        cadastrarLeilaoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarLeilaoMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(cadastrarLeilaoMenuItem);
        userMenu.add(jSeparator2);

        lancesMenuItem.setText("Lances");
        lancesMenuItem.setEnabled(false);

        darLanceMenuItem.setText("Dar Lance");
        lancesMenuItem.add(darLanceMenuItem);

        darLanceMinimoMenuItem.setText("Dar Lance Minimo");
        darLanceMinimoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darLanceMinimoMenuItemActionPerformed(evt);
            }
        });
        lancesMenuItem.add(darLanceMinimoMenuItem);

        userMenu.add(lancesMenuItem);

        jMenuBar1.add(userMenu);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    @Override
    public void addNotify()
    {
        super.addNotify();
        enableUserUI(false);
        produtosList.setVisible(false);
        leiloesList.setVisible(false);
        
    }
    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        try
        {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("binFiles", "bin");
            chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION) 
            {
                facade.salvarDados(chooser.getSelectedFile().getName());
                JOptionPane.showMessageDialog(null, "Informações salvas.", "Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch (IOException e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        try 
        {
            facade.carregarDados("Save.bin");
//            JFileChooser chooser = new JFileChooser();
//            FileNameExtensionFilter filter = new FileNameExtensionFilter("binFiles", "bin");
//            chooser.setFileFilter(filter);
//            int returnVal = chooser.showOpenDialog(null);
//            if(returnVal == JFileChooser.APPROVE_OPTION)
//            {
//                facade.carregarDados(chooser.getSelectedFile().getName());
//                System.out.print(chooser.getSelectedFile().getName());
                JOptionPane.showMessageDialog(null, "Informações carredadas.", "Sistema", JOptionPane.INFORMATION_MESSAGE);
//            }
        }
        catch(IOException | ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        if(facade.getCb().getUsuarioLogado() == null)
        {
            enableUserUI(false);
        }
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void cadastroMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroMenuItemActionPerformed
        new Cadastro(this).setVisible(true);
    }//GEN-LAST:event_cadastroMenuItemActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        new Login(this).setVisible(true);
        
    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void timeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeMenuItemActionPerformed
        Date dataHoraAtual = facade.listarMomentoAtual();
        Calendar cal = Calendar.getInstance();
        cal.setTime(dataHoraAtual);

        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1; // Os meses são baseados em 0
        int day = cal.get(Calendar.DAY_OF_MONTH);
        int hours = cal.get(Calendar.HOUR_OF_DAY);
        int minutes = cal.get(Calendar.MINUTE);
        int seconds = cal.get(Calendar.SECOND);
        lblDate.setText("Data:"+ day+"/"+month+"/"+year);
        lblTime.setText("Hora:"+ hours +":"+minutes+":"+seconds);
    }//GEN-LAST:event_timeMenuItemActionPerformed

    private void cadastrarProdutoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarProdutoMenuItemActionPerformed
        new CadastroProduto(this).setVisible(true);
    }//GEN-LAST:event_cadastrarProdutoMenuItemActionPerformed

    private void cadastrarLeilaoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarLeilaoMenuItemActionPerformed
         new CadastroLeilao(this).setVisible(true);
    }//GEN-LAST:event_cadastrarLeilaoMenuItemActionPerformed
      
    private void btnListarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarProdutosActionPerformed

        DefaultListModel modelProduto = new DefaultListModel<>();
        Iterator<Produto> produtosIterator = facade.listarProdutosCadastrados();
        
        while(produtosIterator.hasNext())
        {
            modelProduto.addElement(produtosIterator.next());
        }

        produtosList.setModel(modelProduto);
        
        produtosList.setCellRenderer(new DefaultListCellRenderer() {
                @Override
                public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus)
                {
                    Component component = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    Produto produto = (Produto) value;

                    if (produto.isVendido())
                    {
                        produtosList.setToolTipText("Vendido");
                        component.setForeground(Color.GREEN);
                    }
                    else
                    {
                        component.setForeground(Color.RED);
                    }

                    return component;
                }
            });
    }//GEN-LAST:event_btnListarProdutosActionPerformed
    private void setLeiloesList(JList list)
    {
        list.setCellRenderer(new DefaultListCellRenderer() {
                @Override
                public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus)
                {
                    Component component = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    Leilao leilao = (Leilao) value;

                    if(leilao.getStatus() == Leilao.CADASTRADO)
                    {
                        component.setForeground(Color.BLUE);
                    }
                    else if(leilao.getStatus() == Leilao.INICIADO)
                    {
                        component.setForeground(Color.GREEN);
                    }
                    else
                    {
                        component.setForeground(Color.RED);
                    }

                    return component;
                }
            });
    }
    private void btnListarLeiloesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarLeiloesActionPerformed

        DefaultListModel modelLeiloes = new DefaultListModel<>();
        Iterator<Leilao> leiloesIterator = facade.listarLeiloes();

        while(leiloesIterator.hasNext())
        {
            modelLeiloes.addElement(leiloesIterator.next());
        }

        leiloesList.setModel(modelLeiloes);
        setLeiloesList(leiloesList);
        
    }//GEN-LAST:event_btnListarLeiloesActionPerformed

    private void btnListarLeiloesIniciadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarLeiloesIniciadosActionPerformed
        
        DefaultListModel modelLeiloes = new DefaultListModel<>();
        Iterator<Leilao> leiloesIterator = facade.listarLeiloesIniciados();

        while(leiloesIterator.hasNext())
        {
            modelLeiloes.addElement(leiloesIterator.next());
        }

        leiloesList.setModel(modelLeiloes);
        setLeiloesList(leiloesList);
    }//GEN-LAST:event_btnListarLeiloesIniciadosActionPerformed

    private void produtosListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_produtosListValueChanged
        Produto produto = produtosList.getSelectedValue();
        if(produto != null)
        {
            info1Plbl1.setText("Tipo: " + produto.getTipo());
            info1Plbl1.setToolTipText(info1Plbl1.getText());
            info2Plbl1.setText("Resumo: " + produto.getDescricaoResumida());
            info2Plbl1.setToolTipText(info2Plbl1.getText());
            info3Plbl1.setText("Detalhes: " + produto.getDescricaoDetalhada());
            info3Plbl1.setToolTipText(info3Plbl1.getText());

            if(produto.isVendido())
            {
                info4Plbl1.setText("Status: Sim");  
            }
            else
            {
                info4Plbl1.setText("Status: Não"); 
            }
            info4Plbl1.setToolTipText(info4Plbl1.getText());
        }
    }//GEN-LAST:event_produtosListValueChanged

    private void leiloesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_leiloesListValueChanged
        Leilao leilao = leiloesList.getSelectedValue();
        if(leilao != null)
        {
            info1Llbl1.setText("Produto: " + leilao.getProduto().getTipo());
            info1Llbl1.setToolTipText(info1Llbl1.getText());
            info2Llbl1.setText("Preço: " + leilao.getPrecoMinimo());
            info2Llbl1.setToolTipText(info2Llbl1.getText());
            info3Llbl1.setText("Incremento: " + leilao.getIncrementoMinimo());
            info3Llbl1.setToolTipText(info3Llbl1.getText());
            info4Llbl1.setText("Vendedor: " + leilao.getVendedor().getNome());
            info4Llbl1.setToolTipText(info4Llbl1.getText());

            if(leilao instanceof LeilaoManual)
            {
               if(leilao.getStatus() == Leilao.CADASTRADO)
               {
                    info5Llbl1.setVisible(false);
                    info6Llbl1.setVisible(false); 
               }
               else if(leilao.getStatus() == Leilao.INICIADO)
               {
                    info5Llbl1.setVisible(true);
                    info5Llbl1.setText("Inicio: " + leilao.getInicio());
                    info6Llbl1.setVisible(false); 
               }
            }
            else
            {
               info5Llbl1.setVisible(true);
               info6Llbl1.setVisible(true);
               info5Llbl1.setText("Inicio: " + leilao.getInicio()); 
               info6Llbl1.setText("Término:" + leilao.getTermino());
            }

            info5Llbl1.setToolTipText(info5Llbl1.getText());
            info6Llbl1.setToolTipText(info6Llbl1.getText());
        }
    }//GEN-LAST:event_leiloesListValueChanged

    private void darLanceMinimoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darLanceMinimoMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_darLanceMinimoMenuItemActionPerformed

    private void btnListarLeiloesEspecificosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarLeiloesEspecificosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnListarLeiloesEspecificosActionPerformed

    private void btnIniciarLeilaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarLeilaoActionPerformed
       Leilao leilao = leiloesList.getSelectedValue();
       if(leilao != null)
       {   
           if(leilao.getVendedor().equals(facade.getCb().getUsuarioLogado()))
           {
               if(leilao.getStatus() == Leilao.INICIADO)
               {
                   JOptionPane.showMessageDialog(null, "Leilão está ativo.", "Erro", JOptionPane.ERROR_MESSAGE);
               }
               else if(leilao.getStatus() == Leilao.ENCERRADO)
               {
                   JOptionPane.showMessageDialog(null, "Leilão está encerrado.", "Erro", JOptionPane.ERROR_MESSAGE);
               }
               else
               {
                   facade.iniciarLeilao(leilao);
                   JOptionPane.showMessageDialog(null, "Leilão iniciado.", "Sistema", JOptionPane.INFORMATION_MESSAGE);
               }
           }
           else
           {
               JOptionPane.showMessageDialog(null, "Você não é o vendedor desse leilão.", "Erro", JOptionPane.ERROR_MESSAGE);
           }
       }
       else
       {
            JOptionPane.showMessageDialog(null, "Leilão não selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_btnIniciarLeilaoActionPerformed

    private void btnParticiparLeilaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParticiparLeilaoActionPerformed
        
        Leilao leilao = leiloesList.getSelectedValue();
        if(leilao != null)
        {   
            try
            {
                facade.participarLeilao(leilao);
                JOptionPane.showMessageDialog(null, "Participando do leilao de " + leilao.getProduto() , "Sistema", JOptionPane.INFORMATION_MESSAGE);
            }
            catch (UsuarioJaParticipaException e)
            {
                JOptionPane.showMessageDialog(null, e.toString(), "Erro", JOptionPane.ERROR_MESSAGE);                
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Leilão não selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnParticiparLeilaoActionPerformed
    
    
    public void logarUsuario(Usuario usuario)
    {
        userMenu.setText(usuario.getLogin());
        for (Component item : userMenu.getMenuComponents())
        {
            if (item instanceof JMenuItem)
            {
                ((JMenuItem)item).setEnabled(true);
            }
        }

        enableUserUI(true);
    }
    public BazarFacade getFacade()
    {
        return facade;
    }
    
    public void enableUserUI(boolean enable)
    {
        btnListarLeiloes.setEnabled(enable);
        btnListarProdutos.setEnabled(enable);
        btnListarLeiloesIniciados.setEnabled(enable);
        btnIniciarLeilao.setEnabled(enable);
        btnParticiparLeilao.setEnabled(enable);
        btnListarLeiloesEspecificos.setEnabled(enable);
        
        //jScrollPane2.setVisible(enable);
        //jScrollPane1.setVisible(enable);
        produtosList.setVisible(enable);
        leiloesList.setVisible(enable);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run() {
                new MainJframe().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarLeilao;
    private javax.swing.JButton btnListarLeiloes;
    private javax.swing.JButton btnListarLeiloesEspecificos;
    private javax.swing.JButton btnListarLeiloesIniciados;
    private javax.swing.JButton btnListarProdutos;
    private javax.swing.JPanel btnPanel;
    private javax.swing.JButton btnParticiparLeilao;
    private javax.swing.JMenuItem cadastrarLeilaoMenuItem;
    private javax.swing.JMenuItem cadastrarProdutoMenuItem;
    private javax.swing.JMenuItem cadastroMenuItem;
    private javax.swing.JMenuItem darLanceMenuItem;
    private javax.swing.JMenuItem darLanceMinimoMenuItem;
    private javax.swing.JPanel dateTimePanel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel info1Llbl1;
    private javax.swing.JLabel info1Plbl1;
    private javax.swing.JLabel info2Llbl1;
    private javax.swing.JLabel info2Plbl1;
    private javax.swing.JLabel info3Llbl1;
    private javax.swing.JLabel info3Plbl1;
    private javax.swing.JLabel info4Llbl1;
    private javax.swing.JLabel info4Plbl1;
    private javax.swing.JLabel info5Llbl1;
    private javax.swing.JLabel info6Llbl1;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel infoSubPanel1;
    private javax.swing.JPanel infoSubPanel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu lancesMenuItem;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JList<Leilao> leiloesList;
    private javax.swing.JPanel listPanel;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel midBtnPanel;
    private javax.swing.JPanel midPanel;
    private javax.swing.JLabel nullLabel1;
    private javax.swing.JLabel nullLabel2;
    private javax.swing.JList<Produto> produtosList;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JMenuItem timeMenuItem;
    private javax.swing.JMenu userMenu;
    // End of variables declaration//GEN-END:variables
}
